#FINAL PROJECT!!!!!!
#So Travel plan- need to access some ticket service thing/place and get all their data
#https://developers.google.com/qpx-express/ is the easy option
        #Do this last first build the program around fake data so I don't have to pay .35c after 50 queries
        # jake in charge of making fake program- do like 5 places and prices between
# they should be able to imput a starting airport or city and an end city/airport 
#as well as the airline they want to take (they can choose a don't care btw)
#we need to organize the data according to price
#All the information will be displayed in order of least expensive up -10 options should be enough
# should be able to click on a price and buy a ticket

print(#this project is going to be lit)

sdML = {}
ML = {"sameday": sdML, "oneday": onedML, "twoday": twodML}





LAX = {"M": ML, "T": TL, "W": WL, "TH": THL, "F": FL, "SA": SL, "SU": SUL}
NYC = {"M": MN, "T": TN, "W": WN, "TH": THN, "F": FN, "SA": SN, "SU": SUN}
ATL = {"M": MA, "T": TA, "W": WA, "TH": THA, "F": FA, "SA": SA, "SU": SUA}

sameday = {"LAX": LAX, "NYC": NYC, "ATL": ATL}

oneday = {"LAX": LAX, "NYC": NYC, "ATL": ATL}


twoday = {"LAX": LAX, "NYC": NYC, "ATL": ATL}


list = ["LAX", "NYC", "ATL"]

#input code needed in order to be able to check which cities and dates we will be traveling between.
# variables created below
print("Works for the airports: LAX,JFK,and ATL")

while True:
    airport_dep = input("What airport will you be leaving from?: ")
    airport_dep = airport_dep.upper()
    if airport_dep not in list:
        print("Invalid airport")
        continue
    else:
        break

while True:
    airport_arriv = input("Which airport will you be traveling to?: ")
    airport_arriv = airport_arriv.upper()
    if airport_arriv not in list:
        print("Invalid airport")
        continue
    else:
        break

while True:
    date_dep = input("What date do you want to leave?: ")
    try:
        date_dep = int(date_dep)
    except ValueError:
        print("Invalid Entry")
        continue
    if date_dep > 19:
        print("Invalid date")
        continue
    else:
        break
        
while True:
    date_ret = input("which date are you going to return?: ")
    try:
        date_ret = int(date_ret)
    except ValueError:
        print("Invalid Entry")
        continue
    if date_ret > 19:
        print("Invalid date")
        continue
    else:
        break
